#!/usr/bin/env bash

set -e

readonly SCRIPT_NAME="$(basename $0)"
readonly CONFIG_PATH=$1
test "$CONFIG_PATH" != "" && test -e $CONFIG_PATH && source $CONFIG_PATH

log() {
  logger -s -t $SCRIPT_NAME --  $*
}

redisComand() {
  local host="$1"
  shift
  local port="$1"
  shift
  local password="$1"
  shift

  if [[ "$password" != 'nopasswtf' ]] ; then
    local password_opt="-a $password"
  fi


  redis-cli -h $host $password_opt -p $port $*
}

redis() {
  redisComand \
    "${REDIS_HOST:-localhost}" \
    "${REDIS_PORT:-6379}" \
    "${REDIS_PASSWORD:-nopasswtf}" \
    $*
}

getQueues() {
  redis SMEMBERS resque:queues | awk '{ print $1 }' | sort

}

getQueueSize() {
  redis LLEN resque:queue:$1 | awk '{ print $1 }'
}

getFailedCount() {
  count=$(redis LLEN resque:failed | awk '{ print $1 }')
  if [[ "$count" = "" ]] ; then
    echo 0
  else
    echo $count
  fi
}

reportToStatsd() {
  local host="$1"
  shift
  local env="$1"
  shift
  local queue="$1"
  shift
  local value="$1"
  shift

  if [[ "$queue$value" != "" ]] ; then
    local payload="resque.${env}.${queue}.gauge:$value|g"
    echo $payload | nc -w 1 -u $host 8125
  fi
}

report() {
  reportToStatsd \
    "${STATSD_HOST:-localhost}" \
    "${STATSD_ENV:-development}" \
    $1 $2
}

main() {
  for queue in $(getQueues) ; do
    local val=$(getQueueSize $queue)
    log "$queue -> $val"
    report "$queue" "$val"
  done

  failed=$(getFailedCount)
  log "failed -> $failed"
  report "failed" $failed

}

main

if [[ "$REPORT_INTERVAL" != "" ]] ; then
  while sleep $REPORT_INTERVAL ; do
    main
  done
fi
